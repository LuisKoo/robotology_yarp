/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_SERVICE_IROBOTDESCRIPTIONMSGS_H
#define YARP_THRIFT_GENERATOR_SERVICE_IROBOTDESCRIPTIONMSGS_H

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <yarp/os/ApplicationNetworkProtocolVersion.h>
#include <return_getAllDevices.h>
#include <return_getAllDevicesByType.h>
#include <yarp/dev/IRobotDescription.h>
#include <yarp/dev/ReturnValue.h>

class IRobotDescriptionMsgs :
        public yarp::os::Wire
{
public:
    //ProtocolVersion
    virtual yarp::os::ApplicationNetworkProtocolVersion getLocalProtocolVersion();
    virtual yarp::os::ApplicationNetworkProtocolVersion getRemoteProtocolVersion();
    virtual bool checkProtocolVersion();

    // Constructor
    IRobotDescriptionMsgs();

    //Service methods
    virtual return_getAllDevices getAllDevicesRPC();

    virtual return_getAllDevicesByType getAllDevicesByTypeRPC(const std::string& type);

    virtual yarp::dev::ReturnValue registerDeviceRPC(const yarp::dev::DeviceDescription& dev);

    virtual yarp::dev::ReturnValue unregisterDeviceRPC(const std::string& dev);

    virtual yarp::dev::ReturnValue unregisterAllRPC();

    // help method
    virtual std::vector<std::string> help(const std::string& functionName = "--all");

    // read from ConnectionReader
    bool read(yarp::os::ConnectionReader& connection) override;
};

#endif // YARP_THRIFT_GENERATOR_SERVICE_IROBOTDESCRIPTIONMSGS_H
